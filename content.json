{"meta":{"title":"kala的博客","subtitle":"个人学习总结、踩坑记录、感悟分享","description":"","author":"kala","url":"http://blog.c2wei.cn","root":"/"},"pages":[{"title":"关于我","date":"2019-12-14T15:33:48.450Z","updated":"2019-12-14T15:33:48.445Z","comments":true,"path":"about/index.html","permalink":"http://blog.c2wei.cn/about/index.html","excerpt":"","text":""},{"title":"archives","date":"2019-12-12T09:38:38.000Z","updated":"2019-12-12T09:38:38.116Z","comments":true,"path":"archives/index.html","permalink":"http://blog.c2wei.cn/archives/index.html","excerpt":"","text":""},{"title":"标签","date":"2019-12-14T15:11:40.459Z","updated":"2019-12-14T15:11:40.459Z","comments":false,"path":"tags/index.html","permalink":"http://blog.c2wei.cn/tags/index.html","excerpt":"","text":""},{"title":"标签","date":"2019-12-12T09:37:27.000Z","updated":"2019-12-12T09:45:49.634Z","comments":true,"path":"tags/index.next.html","permalink":"http://blog.c2wei.cn/tags/index.next.html","excerpt":"","text":""},{"title":"分类","date":"2019-12-12T09:39:12.000Z","updated":"2019-12-12T09:44:52.348Z","comments":true,"path":"categories/index.next.html","permalink":"http://blog.c2wei.cn/categories/index.next.html","excerpt":"","text":""},{"title":"","date":"2019-12-14T15:32:20.447Z","updated":"2019-12-14T14:20:18.810Z","comments":false,"path":"categories/index.html","permalink":"http://blog.c2wei.cn/categories/index.html","excerpt":"","text":""}],"posts":[{"title":"hexo搭建个人博客","slug":"hexo搭建个人博客","date":"2019-09-11T10:16:06.000Z","updated":"2019-12-13T04:40:14.485Z","comments":true,"path":"2019/09/11/hexo搭建个人博客/","link":"","permalink":"http://blog.c2wei.cn/2019/09/11/hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/","excerpt":"hexo是一个简介高效美观的静态博客，拥有许多主题和拓展，功能丰富，部署和写作方便，完美支持md。 hexo基于nodejs驱动，因此开始前先配置好nodejs环境。 安装主题过程和博客部署需要git，因此先安装好git并了解基本操作。 以下为安装配置hexo、安装next主题美化、及写作并发布到服务器的过程。","text":"hexo是一个简介高效美观的静态博客，拥有许多主题和拓展，功能丰富，部署和写作方便，完美支持md。 hexo基于nodejs驱动，因此开始前先配置好nodejs环境。 安装主题过程和博客部署需要git，因此先安装好git并了解基本操作。 以下为安装配置hexo、安装next主题美化、及写作并发布到服务器的过程。 安装hexo和添加主题安装hexo本部分在本地电脑进行 命令行执行 1npm install -g hexo-cli 创建博客 选择一个合适的位置进行，以后新建、编辑及删除文章都将在这个目录下 1hexo init blog2cd blog3npm install 编辑配置 1vim _config.yml 现在先简单修改以下几项 1title: Hexo #站点的标题2subtitle: #站点的副标题3description: #站点的描述，写一段话来介绍你的博客吧:)，主要为SEO使用4author: John Doe #显示的文章作者名字，例如我配置的是fourstring5language: #语言。简体中文是zh-Hans6timezone: #时区，可以不配置，默认以本地时区为准 保存完毕后，执行 1hexo server 在浏览器访问localhost:4000可以看到大概了 安装next主题进行美化命令行进入上一步的博客目录 1cd blog2git clone https:&#x2F;&#x2F;github.com&#x2F;theme-next&#x2F;hexo-theme-next themes&#x2F;next 编辑配置文件 1vim _config.yml 找到theme项 1theme: next 现在重新执行hexo server可以看到主题已经修改了 修改主题配置 1vim themes&#x2F;next&#x2F;_config.yml 搜索下面的项并修改 scheme定义了主题的外观，Pisces是常用的双栏布局，人气较高 1#scheme: Muse2#scheme: Mist3scheme: Pisces language定义语言，改为简体中文 1language: zh-Hans 添加头像，头像图片文件放在主题目录的source/images下，即/blog/themes/next/source/images/avatar.png 1avatar: &#x2F;images&#x2F;avatar.png 文章编辑等常用命令新建一篇文章，执行命令 1hexo new &quot;文章标题&quot; 执行新建命令后会在blog/source/_posts下生成一个md文件，用自己顺手的编辑器打开编辑即可，每次文章变动后，需要执行以下命令，编译生成静态文件 1hexo generate 本地文件同步到服务器，执行如下部署命令 1hexo deploy 但是需要先配置服务器信息 部署到服务器hexo的一键部署功能可以方便的将生成的静态文件推送到远程git仓库(或是其它库) 我使用webhooks完成网站在服务器的自动更新部署 本文用的是gitee，使用github参考我另一篇笔记 添加git仓库地址到hexo配置首先在gitee网站建立一个git仓库 然后修改本地配置文件_config.yml 1# Deployment2## Docs: https:&#x2F;&#x2F;hexo.io&#x2F;docs&#x2F;deployment.html3deploy:4 type: &#39;git&#39;5 repo: &#39;https:&#x2F;&#x2F;gitee.com&#x2F;username&#x2F;blog-hexo.git&#39; #git仓库地址 安装一个hexo插件 1npm install hexo-deploy-git --save 现在执行hexo deploy就会发现已经能推送到git仓库了 克隆仓库到服务器将仓库clone到服务器上的一个位置，如/home/wwwroot/ 1cd &#x2F;home&#x2F;wwwroot2git clone 仓库git地址 我的仓库名是blog，因此得到了/home/wwwroot/blog目录 编辑服务器配置将期望的域名解析到这个目录 查看执行php程序的用户登录自己的服务器 编辑php.ini，确保解锁system,shell_exec函数 可以通过如下php文件查看服务器是用哪个用户执行php程序的 1&lt;?php2system(\"whoami\"); 浏览器访问以上php文件可以看到结果（一定要用浏览器），我的是www用户 将/home/wwwroot/blog的所有者设为该www用户 1chown -R www:www /home/wwwroot/blog 配置部署公钥到服务器www用户目录下建立ssh密钥 1cd &#x2F;home&#x2F;www2sudo -Hu www ssh-keygen -t rsa -C &quot;your_name@example.com&quot; 3&#x2F;&#x2F;注意改为自己的邮箱 查看密钥内容并复制 1cat &#x2F;home&#x2F;www&#x2F;.ssh&#x2F;id_rsa.pub 到gitee打开仓库的设置页-&gt;部署公钥设置，新建一个公钥并填入 配置webhooks打开仓库设置-&gt;webhooks-&gt;添加webhooks 有两个参数 URL：能访问到自己的服务器即可，例如example.com/hooks.php 该地址只要和博客在一台服务器上即可，不一定为博客地址或在博客地址下 密码：随意填写一个，用于检验，例如填写kalakala 选择事件只勾选push，同时勾选激活，点击添加 在服务器对应位置编辑hooks.php，内容如下 1&lt;?php2$secret &#x3D; &quot;kalakala&quot;; &#x2F;&#x2F;密钥，和 Gitee 上对应3if ($_SERVER[&quot;HTTP_X_GITEE_TOKEN&quot;] &#x3D;&#x3D; $secret) &#123;4 $ret &#x3D; shell_exec(&quot;cd &#x2F;home&#x2F;wwwroot&#x2F;blog &amp;&amp; git pull 2&gt;&amp;1&quot;);5 echo &quot;更新成功&quot;;6 var_dump($ret);7&#125; else &#123;8 echo &quot;密钥错误&quot;;9&#125; 随意修改一下博客文章内容，执行hexo generate再执行hexo deploy部署测试一下 已经可以自动更新部署了","categories":[],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://blog.c2wei.cn/tags/hexo/"},{"name":"博客","slug":"博客","permalink":"http://blog.c2wei.cn/tags/%E5%8D%9A%E5%AE%A2/"}]},{"title":"ubuntu18安装sublime及解决不能中文输入","slug":"ubuntu18安装sublime及解决不能中文输入","date":"2018-09-12T13:47:51.000Z","updated":"2019-12-13T04:40:03.041Z","comments":true,"path":"2018/09/12/ubuntu18安装sublime及解决不能中文输入/","link":"","permalink":"http://blog.c2wei.cn/2018/09/12/ubuntu18%E5%AE%89%E8%A3%85sublime%E5%8F%8A%E8%A7%A3%E5%86%B3%E4%B8%8D%E8%83%BD%E4%B8%AD%E6%96%87%E8%BE%93%E5%85%A5/","excerpt":"ubuntu18更换了桌面环境，配置sublime启动器时略有不同，大概安装和ubuntu16一致 本文从头开始安装sublime并添加中文输入支持 安装sublime","text":"ubuntu18更换了桌面环境，配置sublime启动器时略有不同，大概安装和ubuntu16一致 本文从头开始安装sublime并添加中文输入支持 安装sublime 到 sublime官网下载linux可用的sublime_text_3程序包(非安装包) 解压后得到一个sublime_text_3文件夹 把文件夹移动到/opt/ 1mv sublime_text_3 &#x2F;opt&#x2F; 然后重命名为sublime_text 1mv &#x2F;opt&#x2F;sublime_text_3 &#x2F;opt&#x2F;sublime_text 现在sublime已经安装到了/opt/目录，但是还没有启动图标和无法使用中文输入法 下载和添加中文支持共享库下载我们需要的文件，打开终端，输入： 1git clone https:&#x2F;&#x2F;github.com&#x2F;lyfeyaj&#x2F;sublime-text-imfix.git 将subl移动到/usr/bin/，并且将sublime-imfix.so移动到/opt/sublime_text/（sublime的安装目录）终端输入： 1cd ~&#x2F;sublime-text-imfix2sudo cp .&#x2F;lib&#x2F;libsublime-imfix.so &#x2F;opt&#x2F;sublime_text&#x2F;3sudo cp .&#x2F;src&#x2F;subl &#x2F;usr&#x2F;bin&#x2F; 用subl命令试试能不能启动sublime，如果成功启动的话，应该就可以输入中文了。终端输入： 1LD_PRELOAD&#x3D;&#x2F;opt&#x2F;sublime_text&#x2F;libsublime-imfix.so subl 配置启动图标新建文件sublime.desktop 1vim sublime.desktop 填入以下内容 1[Desktop Entry]2Version&#x3D;1.03Type&#x3D;Application4Name&#x3D;Sublime Text5GenericName&#x3D;Text Editor6Comment&#x3D;Sophisticated text editor for code, markup and prose7Exec&#x3D;bash -c &quot;LD_PRELOAD&#x3D;&#x2F;opt&#x2F;sublime_text&#x2F;libsublime-imfix.so subl&quot;8Terminal&#x3D;false9MimeType&#x3D;text&#x2F;plain;10Icon&#x3D;sublime-text11Categories&#x3D;TextEditor;Development;12StartupNotify&#x3D;true13Actions&#x3D;Window;Document;1415[Desktop Action Window]16Name&#x3D;New Window17Exec&#x3D;bash -c &quot;LD_PRELOAD&#x3D;&#x2F;opt&#x2F;sublime_text&#x2F;libsublime-imfix.so subl&quot;18OnlyShowIn&#x3D;Gnome;1920[Desktop Action Document]21Name&#x3D;New File22Exec&#x3D;bash -c &quot;LD_PRELOAD&#x3D;&#x2F;opt&#x2F;sublime_text&#x2F;libsublime-imfix.so subl&quot;23OnlyShowIn&#x3D;Gnome; 保存后，修改文件权限 1chown 用户名:用户名 sublime.desktop2用户名为当前登录到ubuntu的用户名 在图形界面下找到文件，右击文件 选择属性-&gt;权限，勾选“允许作为可执行文件”，顺便查看一下用户组是否为当前用户 关闭属性界面，双击文件，选择“trust and lanuch” 如果能正常启动应用，就创建成功了 然后移动到/usr/share/applications 1mv sublime.desktop &#x2F;usr&#x2F;local&#x2F;applications&#x2F; 现在打开程序列表，就找到sublime的图标了 完成","categories":[{"name":"ubuntu","slug":"ubuntu","permalink":"http://blog.c2wei.cn/categories/ubuntu/"}],"tags":[{"name":"ubuntu","slug":"ubuntu","permalink":"http://blog.c2wei.cn/tags/ubuntu/"},{"name":"sublime","slug":"sublime","permalink":"http://blog.c2wei.cn/tags/sublime/"}]},{"title":"ubuntu18添加应用到启动器","slug":"ubuntu18添加应用到启动器","date":"2018-06-12T08:45:00.000Z","updated":"2019-12-13T04:39:53.999Z","comments":true,"path":"2018/06/12/ubuntu18添加应用到启动器/","link":"","permalink":"http://blog.c2wei.cn/2018/06/12/ubuntu18%E6%B7%BB%E5%8A%A0%E5%BA%94%E7%94%A8%E5%88%B0%E5%90%AF%E5%8A%A8%E5%99%A8/","excerpt":"ubuntu18更换了桌面环境为Gnome，二进制文件启动的应用不能固定到dock，如sublime、idea等，需要自己创建启动图标并添加到启动器 首先创建一个后缀名为.desktop的文件","text":"ubuntu18更换了桌面环境为Gnome，二进制文件启动的应用不能固定到dock，如sublime、idea等，需要自己创建启动图标并添加到启动器 首先创建一个后缀名为.desktop的文件 然后填入以下内容 1[Desktop Entry]2Name&#x3D;[软件名称]3Comment&#x3D;[软件介绍]45GenericName&#x3D;[注释，副标题]6Exec&#x3D;[启动命令，可执行文件路径或在环境变量中设定好的指令均可]7Icon&#x3D;[软件图标，png、svg都可以]8Type&#x3D;Application9StartupNotify&#x3D;true10Categories&#x3D;[软件分类目录]11MimeType&#x3D;[软件类型] 例： 1[Desktop Entry]2Name&#x3D;PyCharm3Comment&#x3D;Full-featured IDE for Python &amp; Web development4GenericName&#x3D;jetbrains PyCharm Professional5Exec&#x3D;charm6Icon&#x3D;&#x2F;opt&#x2F;pycharm&#x2F;bin&#x2F;pycharm.svg7Type&#x3D;Application8StartupNotify&#x3D;true9Categories&#x3D;Development;IDE;10MimeType&#x3D;Development;IDE; 保存 注意:该文件的所有权一定要是当前用户，即开机时登录的用户，这样才能对启动文件进行信任修改所有权的命令 1sudo chown 用户名:用户名 文件名 另外启动命令一定要正确 右击文件，选择属性-&gt;权限，勾选“允许作为可执行文件”，顺便查看一下用户组是否为当前用户 关闭属性界面，双击文件，选择“trust and lanuch” 如果能正常启动应用，就可以添加到桌面或是系统应用列表了 系统应用列表目录为/usr/share/applications/ 直接将文件移动到目录即可，启动器就会出现图标 右击应用列表中的应用图标会有添加到收藏夹，就可以添加到dock了","categories":[{"name":"ubuntu","slug":"ubuntu","permalink":"http://blog.c2wei.cn/categories/ubuntu/"}],"tags":[{"name":"ubuntu","slug":"ubuntu","permalink":"http://blog.c2wei.cn/tags/ubuntu/"}]},{"title":"使用webhooks实现git自动拉取代码","slug":"使用webhooks实现git自动拉取代码","date":"2017-04-25T09:19:49.000Z","updated":"2019-12-14T12:43:06.458Z","comments":true,"path":"2017/04/25/使用webhooks实现git自动拉取代码/","link":"","permalink":"http://blog.c2wei.cn/2017/04/25/%E4%BD%BF%E7%94%A8webhooks%E5%AE%9E%E7%8E%B0git%E8%87%AA%E5%8A%A8%E6%8B%89%E5%8F%96%E4%BB%A3%E7%A0%81/","excerpt":"将要自动拉取代码的仓库克隆到服务器，记住位置 以下示例用的仓库服务器地址为/home/wwwroot/website 查看服务器执行php使用的用户","text":"将要自动拉取代码的仓库克隆到服务器，记住位置 以下示例用的仓库服务器地址为/home/wwwroot/website 查看服务器执行php使用的用户 编辑php.ini，确保system,shell_exec函数没有被禁用 通过如下php脚本查看服务器是用哪个用户执行php程序的 1&lt;?php2system(\"whoami\"); 浏览器请求这个php文件，可以看到结果，我的是www用户 将/home/wwwroot/blog的所有者设为该www用户 1chown -R www:www /home/wwwroot/website 这样做的意义是保证hooks执行时拥有操作/home/wwwroot/website的权限 设置git基本信息这里设置的是www用户，即执行php使用的用户的git基本信息 1sudo -Hu www git config --global user.name &quot;username&quot;2sudo -Hu www git config --global user.email &quot;email@example.com&quot; 3&#x2F;&#x2F;邮箱要与github上一致 没有基本信息是无法拉取代码的 配置部署公钥先在服务器生成部署公钥 1sudo -Hu www ssh-keygen -t rsa -C &quot;your_name@example.com&quot; 2&#x2F;&#x2F;注意修改邮箱 查看密钥内容并复制 1cat &#x2F;home&#x2F;www&#x2F;.ssh&#x2F;id_rsa.pub 到github打开repositories的setting页-&gt;Deploy keys-&gt;Add deploy key，在key处填入复制的内容，title随意起一个用于辨别，点击Add key 配置webhooks到github打开repositories的setting页-&gt;Webhooks-&gt;Add Webhook: Payload URL填写hooks脚本的地址，如c2wei.cn/hooks.php，确保可以正确访问且和自动拉取的代码同服务器即可 Content Type保持默认 Secret填写一个密码，用于检验防止恶意请求，随意填写，如helloworld 剩下的勾选项保持默认，默认只在push事件发生时自定拉取，也可以配置更多事件 编写hooks编写hooks.php，并保证访问地址为上一步填写的，脚本内容如下 1&lt;?php2$secret &#x3D; &quot;helloworld&quot;; &#x2F;&#x2F;密钥，和上一步对应3$path &#x3D; &quot;&#x2F;home&#x2F;wwwroot&#x2F;website&quot;; &#x2F;&#x2F;自动拉取代码的文件目录4$signature &#x3D; $_SERVER[&quot;HTTP_X_HUB_SIGNATURE&quot;]; &#x2F;&#x2F;获取散列字符串5if($signature) &#123;6 $data &#x3D; file_get_contents(&quot;php:&#x2F;&#x2F;input&quot;); &#x2F;&#x2F;获取收到的数据7 list($func, $hash) &#x3D; explode(&quot;&#x3D;&quot;, $signature, 2); &#x2F;&#x2F;获取散列算法、散列值8 if ($hash &#x3D;&#x3D;&#x3D; hash_hmac($func, $data, $secret)) &#123; 9 $response &#x3D; shell_exec(&quot;cd &quot;.$path.&quot; &amp;&amp; git pull 2&gt;&amp;1&quot;); &#x2F;&#x2F;拉取代码10 var_dump($response);11 &#125; else &#123;12 echo &quot;验证失败&quot;;13 &#125;14&#125; else &#123;15 echo &quot;密钥错误&quot;;16&#125; 保存脚本，本地push代码测试一下，OK 如果有问题检查文件权限问题，文件权限很关键，保证www用户拥有文件权限 在github的webhooks设置页可以查看hooks请求详情纠错","categories":[],"tags":[{"name":"git","slug":"git","permalink":"http://blog.c2wei.cn/tags/git/"}]},{"title":"js定时器实现动画","slug":"js定时器实现动画","date":"2017-04-16T11:33:09.000Z","updated":"2019-12-14T12:41:48.819Z","comments":true,"path":"2017/04/16/js定时器实现动画/","link":"","permalink":"http://blog.c2wei.cn/2017/04/16/js%E5%AE%9A%E6%97%B6%E5%99%A8%E5%AE%9E%E7%8E%B0%E5%8A%A8%E7%94%BB/","excerpt":"现在网页动画效果有css3，有jquery的animate函数，可以方便的写出各种绚丽的效果。 但是，动画效果是怎么实现的？ 先看动画效果demo:js动画","text":"现在网页动画效果有css3，有jquery的animate函数，可以方便的写出各种绚丽的效果。 但是，动画效果是怎么实现的？ 先看动画效果demo:js动画 动画实现原理动画片是通过一帧一帧的连续的图片生成的，js动画也是同理，例如网页中有个方块： 1#box &#123;2 width: 100px;3 height: 200px;4 background-color: yellow;5&#125; 1&lt;div id=\"box\"&gt;&lt;/div&gt; 现在实现一个动画，把方块的宽度慢慢变为200px，实现动画效果要一帧一帧的变化 假设这个过程在一秒内完成，如果设定10ms显示一帧，则一秒一共有100帧，也就是每10ms方块的宽度增加1px 可以通过js的定时器函数实现 1var target = 200;2var box = document.getElementById(\"box\");3var interval = setInterval(function () &#123;4 var width = box.offsetWidth;5 if (width &lt; target) &#123;6 box.style.width = (width+1) + 'px';7 &#125; else &#123;8 clearInterval(interval);9 &#125;10&#125;, 10); 样式获取问题在js中，只有少数几个属性有形如element.offsetWidth的函数获取当前样式， 而element.style只能获取和设置行内样式，外链样式需要通过getComputedStyle函数获取 在动画效果中，是需要不停比较当前样式值和目标样式值的 直接创建一个获取样式的函数： 1var getStyle = function (element, property) &#123;2 var value = element.style[property]3 if (value) &#123;4 return value;5 &#125; else &#123;6 return getComputedStyle(element, null)[property];7 &#125;8&#125; 函数封装我们把动画效果代码封装为一个函数animate 将速度提取出来，使其可定义，即动画执行时间 还要注意速度为负数的情况，即变小 1//定时器2var interval = null;3//time为动画时间 单位s4function animate(element, property, target, time) &#123;5 //设定每帧时间 单位ms6 var rate = 30; 7 //计算速度 每帧变动量8 var speed = (target - parseInt(getStyle(element, property))) / (time/rate*1000);9 clearInterval(interval); //先清空一次 避免动画未完成时函数又被调用10 interval = setInterval(function () &#123;11 //计算当前位置12 var offset = parseInt(getStyle(element, property));13 if (offset &lt; target &amp;&amp; speed &gt; 0) &#123; //变大时14 element.style[property] = (offset+speed)+'px' ;15 &#125; else if (offset &gt; target &amp;&amp; speed &lt; 0) &#123; //变小时16 element.style[property] = (offset+speed)+'px';17 &#125; else &#123; //结束时18 element.style[property] = target+'px';19 clearInterval(interval);20 &#125;21 &#125;, rate);22&#125; 后续问题思考多页面元素同时运动上一部份代码有一个明显的缺陷，interval作为公共变量被声明 如果有两个或多个元素同时使用animate函数，则interval变量也是同一个，同时工作的定时器只有一个 因此无法实现多页面元素的同时运动，解决方法是给每个元素分配一个定时器 直接给元素一个新属性，储存定时器，改动如下： 1function animate(element, property, target, time) &#123;2 element.interval = null; //interval直接设置为element的属性3 var rate = ...略 同上一部分4 var speed = ...略 同上一部分5 clearInterval(interval);6 element.interval = setInterval(function() &#123;7 ......省略8 &#125;)9&#125; 链式运动链式运动就是一个动画结束，另一个动画立即开始，一个动画接一个动画，形成动画链 可以通过添加一个回调函数fn实现，在动画结束时调用fn，fn传在参数里： 1function animate(element, property, target, time, fn) &#123;2 var rate = ......省略3 var speed = ......省略;4 clearInterval(element.interval);5 element.interval = setInterval(function () &#123;6 var offset = .....省略;7 if (判定动画未完成的条件) &#123;8 ........省略9 &#125; else &#123;10 element.style[property] = target+'px';11 clearInterval(interval);12 //重点 在动画结束时 若存在回调函数 调用回调函数13 if (fn) fn();14 &#125;15 &#125;, rate);16&#125; 使用方法 1animate(box, 'width', 200, 1, function() &#123;2 animate(box, 'height', 300, 2);3&#125;); 多样式同时运动把样式和样式目标用一个{}类型传入，遍历它操作 如： 1&#123;2 width: &#39;300px&#39;,3 height: &#39;300px&#39;4&#125; 代码： property为一个{}类型，链式效果用回调函数实现 1var animate = function (element, property, time, fn) &#123;2 var propertyList = Object.keys(property);3 if (propertyList.length &lt; 1) return;4 var rate = 30;5 var speedList = &#123;&#125;;6 for (var i = 0; i &lt; propertyList.length; i ++) &#123;7 var target = parseInt(property[propertyList[i]]);8 speedList[propertyList[i]] = (target - parseInt(getStyle(element, propertyList[i]))) / (time/rate*1000);9 &#125;10 clearInterval(element.interval);11 element.interval = setInterval(function () &#123;12 var completed = true;13 for (var i = 0; i &lt; propertyList.length; i ++) &#123;14 var offset = parseInt(getStyle(element, propertyList[i]));15 var target = parseInt(property[propertyList[i]]);16 var speed = speedList[propertyList[i]];17 if ((offset &lt; target &amp;&amp; speed &gt; 0)||18 (offset &gt; target &amp;&amp; speed &lt; 0)) &#123;19 completed = false;20 element.style[propertyList[i]] = (offset+speed)+'px';21 &#125; else &#123;22 element.style[propertyList[i]] = target+'px';23 &#125;24 &#125; 25 if (completed) &#123;26 clearInterval(element.interval)27 if (fn) fn();28 &#125;29 &#125;, rate);30&#125;","categories":[],"tags":[{"name":"javascript","slug":"javascript","permalink":"http://blog.c2wei.cn/tags/javascript/"}]},{"title":"ubuntu下sublime不能输入中文解决","slug":"ubuntu下sublime不能输入中文解决","date":"2017-04-09T02:45:11.000Z","updated":"2019-12-14T12:40:40.682Z","comments":true,"path":"2017/04/09/ubuntu下sublime不能输入中文解决/","link":"","permalink":"http://blog.c2wei.cn/2017/04/09/ubuntu%E4%B8%8Bsublime%E4%B8%8D%E8%83%BD%E8%BE%93%E5%85%A5%E4%B8%AD%E6%96%87%E8%A7%A3%E5%86%B3/","excerpt":"本文适用于ubuntu16 让sublime支持gbk编码安装convertToUTF8插件首先，按住ctrl+shift+p，然后，在弹出的搜索框中输入install package最后，输入ConvertToUTF8，等待安装安装完成后重启subline Text3即可。","text":"本文适用于ubuntu16 让sublime支持gbk编码安装convertToUTF8插件首先，按住ctrl+shift+p，然后，在弹出的搜索框中输入install package最后，输入ConvertToUTF8，等待安装安装完成后重启subline Text3即可。 让sublime支持中文输入法本部分只包含让sublime支持中文输入法 下载我们需要的文件(在github上有编译好的共享库)，打开终端，输入： 1git clone https:&#x2F;&#x2F;github.com&#x2F;lyfeyaj&#x2F;sublime-text-imfix.git 将subl移动到/usr/bin/，并且将sublime-imfix.so移动到/opt/sublime_text/（sublime的安装目录）终端输入： 1cd ~&#x2F;sublime-text-imfix2sudo cp .&#x2F;lib&#x2F;libsublime-imfix.so &#x2F;opt&#x2F;sublime_text&#x2F;3sudo cp .&#x2F;src&#x2F;subl &#x2F;usr&#x2F;bin&#x2F; 用subl命令试试能不能启动sublime，如果成功启动的话，应该就可以输入中文了 终端输入： 1LD_PRELOAD&#x3D;&#x2F;opt&#x2F;sublime_text&#x2F;libsublime-imfix.so subl 将上面的启动命令替换到启动器中 打开sublime-text.desktop 1cd &#x2F;usr&#x2F;share&#x2F;applications&#x2F;2sudo vim sublime_text.desktop 修改sublime-text.desktop 1[Desktop Entry]2Version&#x3D;1.03Type&#x3D;Application4Name&#x3D;Sublime Text5GenericName&#x3D;Text Editor6Comment&#x3D;Sophisticated text editor for code, markup and prose7Exec&#x3D;&#x2F;usr&#x2F;bin&#x2F;subl %F &#x2F;&#x2F;此行修改为 Exec&#x3D;bash -c &quot;LD_PRELOAD&#x3D;&#x2F;opt&#x2F;sublime_text&#x2F;libsublime-imfix.so subl&quot;8Terminal&#x3D;false9MimeType&#x3D;text&#x2F;plain;10Icon&#x3D;sublime-text11Categories&#x3D;TextEditor;Development;Utility;12StartupNotify&#x3D;true13Actions&#x3D;Window;Document;1415X-Desktop-File-Install-Version&#x3D;0.221617[Desktop Action Window]18Name&#x3D;New Window19Exec&#x3D;&#x2F;usr&#x2F;bin&#x2F;subl -n&#x2F;&#x2F;此行修改为 Exec&#x3D;bash -c &quot;LD_PRELOAD&#x3D;&#x2F;opt&#x2F;sublime_text&#x2F;libsublime-imfix.so subl&quot;20OnlyShowIn&#x3D;Unity;2122[Desktop Action Document]23Name&#x3D;New File24Exec&#x3D;&#x2F;usr&#x2F;bin&#x2F;subl --command new_file&#x2F;&#x2F;此行修改为 Exec&#x3D;bash -c &quot;LD_PRELOAD&#x3D;&#x2F;opt&#x2F;sublime_text&#x2F;libsublime-imfix.so subl&quot;25OnlyShowIn&#x3D;Unity; sublime_text.desktop关键是修改形式为Exec=xxxx这几行，Exec=后跟的为启动器的执行命令 安装sublime没有找到启动器本部分从头开始安装sublime并添加中文输入支持 Ubuntu安装sublime到 sublime官网下载linux可用的sublime_text_3程序包(非安装包) 解压后得到一个sublime_text_3文件夹 把文件夹移动到/opt/ 1mv sublime_text_3 &#x2F;opt&#x2F; 然后重命名为sublime_text 1mv &#x2F;opt&#x2F;sublime_text_3 &#x2F;opt&#x2F;sublime_text 在sublime_text文件夹里可以找到一个sublime.desktop复制到桌面上（后面编辑、双击的全是桌面上这个sublime.desktop） 右击sublime.desktop 找到属性 改为可执行程序 这时候双击它应该可以启动sublime 下载和添加中文支持共享库下载我们需要的文件，打开终端，输入： 1git clone https:&#x2F;&#x2F;github.com&#x2F;lyfeyaj&#x2F;sublime-text-imfix.git 将subl移动到/usr/bin/，并且将sublime-imfix.so移动到/opt/sublime_text/（sublime的安装目录）终端输入： 1cd ~&#x2F;sublime-text-imfix2sudo cp .&#x2F;lib&#x2F;libsublime-imfix.so &#x2F;opt&#x2F;sublime_text&#x2F;3sudo cp .&#x2F;src&#x2F;subl &#x2F;usr&#x2F;bin&#x2F; 用subl命令试试能不能启动sublime，如果成功启动的话，应该就可以输入中文了。终端输入： 1LD_PRELOAD&#x3D;&#x2F;opt&#x2F;sublime_text&#x2F;libsublime-imfix.so subl 将启动命令添加到sublime.desktop右击sublime.desktop 选择属性 找到命令一栏改成如下： 1bash - c &quot;LD_PRELOAD&#x3D;&#x2F;opt&#x2F;sublime_text&#x2F;libsublime-imfix.so subl&quot; 这时候双击启动文件启动也能输入中文了 再从桌面上把sublime.desktop拖放到启动面板里 完成","categories":[{"name":"ubuntu","slug":"ubuntu","permalink":"http://blog.c2wei.cn/categories/ubuntu/"}],"tags":[{"name":"ubuntu","slug":"ubuntu","permalink":"http://blog.c2wei.cn/tags/ubuntu/"}]}]}